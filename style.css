@property --clr-1 {
  syntax: "<color>";
  inherits: true;
  initial-value: red;
}

@property --clr-2 {
  syntax: "<color>";
  inherits: true;
  initial-value: yellow;
}
@property --clr-3 {
  syntax: "<color>";
  inherits: true;
  initial-value: green;
}
@property --clr-4 {
  syntax: "<color>";
  inherits: true;
  initial-value: blue;
}

@property --clr-5 {
  syntax: "<color>";
  inherits: true;
  initial-value: purple;
}

.glowing-border {
  --gradient-glow: var(--clr-1), var(--clr-2), var(--clr-3), var(--clr-4),
    var(--clr-5), var(--clr-1);
  --glow-intensity: 0.25;
  --border-width: 10px;
  --glow-size: 1rem;
  --surface: #000;

  margin-block: 3rem;
  padding: 8rem 3rem;
  max-width: 60ch;

  border: var(--border-width, 3px) solid transparent;
  border-left: 0;
  border-radius: 0 100vw 100vw 0;

  background: linear-gradient(var(--surface) 0 0) padding-box,
    conic-gradient(from -90deg, var(--gradient-glow)) border-box;

  position: relative;
  isolation: isolate;
}

.glowing-border::before,
.glowing-border::after {
  content: "";
  position: absolute;
  border-radius: inherit;
}

.glowing-border::before {
  background: var(--surface, Canvas);
  inset: 0.5rem;
  scale: 1.2 1;
  transform-origin: right;
  z-index: -1;
  filter: blur(var(--glow-size, 1rem));
}

.glowing-border::after {
  background: conic-gradient(from -90deg, var(--gradient-glow));
  inset: -1.5rem;
  z-index: -2;
  filter: blur(var(--glow-size, 1rem));
  opacity: var(--glow-intensity, 0.125);
}

.glowing-border.right {
  margin-inline-start: auto;
  border-radius: 100vw 0 0 100vw;
  border: var(--border-width, 3px) solid transparent;
  border-right: 0;

  &::before {
    transform-origin: left;
  }
}

.glowing-border.left {
  margin-inline-end: auto;
}

@layer general-styling {
  * {
    box-sizing: border-box;
  }

  html {
    font-family: system-ui;
    color-scheme: dark;
  }

  body {
    margin: 0;
    overflow-x: clip;

    /* --surface: #fff;   */
    background: var(--surface);
  }
}
